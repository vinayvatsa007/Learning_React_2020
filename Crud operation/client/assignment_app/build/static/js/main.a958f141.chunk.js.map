{"version":3,"sources":["services/BaseService.js","services/Student.js","components/Form.js","components/TextField.js","components/DatePicker.js","containers/Students/Form/index.js","components/Actions.js","components/Dialog.js","components/Table.js","components/withAuthentication.js","utils/localStorage.js","containers/Students/Student.js","components/Drawer.js","containers/Assignments/Assignments.js","services/Assignment.js","components/Login/Styles.js","utils/mockData.js","components/Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["BaseService","route","getUrl","actionURL","fullUrl","baseRoute","includes","baseUrl","find","filters","a","request","get","query","resp","body","console","log","findById","id","serviceURL","insertRecord","requestBody","post","send","updateRecord","put","deleteRecord","delete","this","process","Service","Form","props","open","onClose","onSave","Dialog","aria-labelledby","DialogTitle","title","DialogContent","formContent","DialogContentText","children","DialogActions","Button","onClick","color","TextField","autoFocus","margin","label","type","fullWidth","value","name","onChange","className","e","target","DatePickers","format","disableToolbar","variant","React","useState","Date","toISOString","split","utils","DateFnsUtils","date","KeyboardButtonProps","studentService","StudentService","StudentForm","setIsLoading","editRecord","setEditRecord","isFormOpen","dob","gender","currentClassId","admissionNumber","organizationId","branchId","transportMode","objStudent","useEffect","results","updateStudent","onChangeField","success","Actions","record","onEdit","deleteRecordId","onDelete","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","maxHeight","ConfirmationDialogRaw","handleCancel","handleOk","content","other","disableBackdropClick","disableEscapeKeyDown","dividers","Children","map","item","withStyles","marginTop","spacing","overflowX","table","minWidth","padding","classes","columns","isLoading","data","onEditClickHandler","onDeleteClickHandler","confirmationDialogContent","confirmationDialogTitle","isConfirmationDialogOpen","setIsConfirmationDialogOpen","currentRecord","setCurrentRecord","finalConfirmationMessage","setFinalConfirmationMessage","handleDelete","Paper","Table","TableHead","TableRow","col","TableCell","key","toUpperCase","TableBody","CircularProgress","row","render","withAuthentication","Component","history","useHistory","localStorage","push","TABLE_COLUMNS","list","setList","setIsFormOpen","setEditMode","editRecordId","setEditRecordId","listStudent","result","style","float","useStyles","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","breakpoints","up","toolbar","alignItems","justifyContent","mixins","flexGrow","MiniDrawer","useTheme","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Drawer","direction","Divider","List","path","index","ListItem","button","ListItemIcon","ListItemText","primary","clear","assignmentService","Assignments","objAssignment","subName","assignmentGivenByTeacher","section","assignmentDetails","dueDate","state","searchText","filteredList","myAssignment","editMode","onClickCreateAssignment","setState","getAssignmentRecordById","assignmentList","assignmentRecordById","filter","getAssignmentList","onCloseAssignmentForm","onSubmitAssignmentDetails","alert","response","prevProps","prevState","light","main","loginWrapper","flexDirection","loginMainWrapper","textField","marginBottom","loginButton","errorChip","borderRadius","border","mockUsers","age","userName","password","token","authenticateUser","un","pass","Promise","resolve","reject","user","length","JSON","stringify","set","error","Login","classess","userDetails","setUserDetails","loginError","setLoginError","getItem","onSubmit","Chip","App","location","useLocation","isDrawer","pathname","withDrawer","component","Students","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a958f141.chunk.js","sourcesContent":["//use library superagent via npm install superagent\r\n// for better communication of backend services\r\nimport request from \"superagent\";\r\n\r\nclass BaseService {\r\n  // constBaseUrl = '/assignments'\r\n  constructor(route) {\r\n    this.baseRoute = route;\r\n    // this.baseUrl = \"http://localhost:3010/\";\r\n    // fetching the service url through environment variables.\r\n    this.baseUrl = process.env.REACT_APP_SERVICE_URL;\r\n  }\r\n\r\n  getUrl = (actionURL = \"\") => {\r\n    let fullUrl = this.baseRoute.includes(\"/\")\r\n      ? this.baseUrl + this.baseRoute\r\n      : this.baseUrl + this.baseRoute + \"/\";\r\n    fullUrl += actionURL;\r\n    return fullUrl;\r\n  };\r\n  // 5 crud and 1 raw - anonymous req\r\n  //const filters\r\n  find = async (filters) => {\r\n    try {\r\n      //Node Services hosting URL ---- http://localhost:3010/\r\n      // route=> assignments/\r\n      const resp = await request.get(this.getUrl()).query(filters);\r\n      // console.log(\"find method results ---\", resp);\r\n      return resp.body;\r\n    } catch (error) {\r\n      console.log(\"Error_from_BaseService.js\", error);\r\n      throw error;\r\n      // new Error({message:error.message, status:error.status})\r\n    }\r\n  };\r\n\r\n  //Node Services hosting URL ---- http://localhost:3010/students/1\r\n  // route=> students/1\r\n  findById = async (id) => {\r\n    try {\r\n      const serviceURL = this.getUrl(`${id}`);\r\n      // console.log(serviceURL);\r\n      const resp = await request.get(serviceURL).query();\r\n      // console.log(\"findById method results ---\", resp);\r\n      return resp.body;\r\n    } catch (error) {\r\n      console.log(\"Error_from_BaseService.js\", error);\r\n      throw error;\r\n    }\r\n  };\r\n  //Node Services hosting URL ---- http://localhost:3010/\r\n  // route=> add/\r\n  insertRecord = async (requestBody) => {\r\n    try {\r\n      const resp = await request.post(this.getUrl(\"add\")).send(requestBody);\r\n      console.log(\"Insert method results ---\", resp);\r\n      return resp.body;\r\n    } catch (error) {\r\n      console.log(\"Error_from_BaseService.js\", error);\r\n      throw error;\r\n      // new Error({message:error.message, status:error.status})\r\n    }\r\n  };\r\n  //Node Services hosting URL ---- http://localhost:3010/\r\n  // route=> update/:id -----http://localhost:3010/assignments/update/46\r\n  updateRecord = async (requestBody, id) => {\r\n    try {\r\n      delete requestBody.id;\r\n      const resp = await request\r\n        .put(this.getUrl(`update/${id}`))\r\n        .send(requestBody);\r\n      console.log(\r\n        \"updateRecord=> response from service update method ---\",\r\n        resp\r\n      );\r\n      console.log(\r\n        \"updateRecord=> resp.body from service update method ---\",\r\n        resp.body\r\n      );\r\n      return resp.body;\r\n    } catch (error) {\r\n      console.log(\"updateRecord=>Error_from_BaseService.js\", error);\r\n      throw error;\r\n    }\r\n  };\r\n  //Node Services hosting URL ---- http://localhost:3010/\r\n  // route=> delete/:id--- http://localhost:3010/assignments/delete/50\r\n  deleteRecord = async (id) => {\r\n    try {\r\n      const resp = await request\r\n        .delete(this.getUrl(`delete/${id}`))\r\n        // .send(requestBody);\r\n        //.send({ id: id });  //----- it will also work.\r\n        .send(id); // we don't have req body here but just the id thus we just need to request.send(id)\r\n      console.log(\"deleteRecord=> method results ---\", resp);\r\n      return resp.body;\r\n    } catch (error) {\r\n      console.log(\"deleteRecord=>Error_from_BaseService.js\", error);\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\nexport default BaseService;\r\n","import BaseService from \"./BaseService\";\r\n\r\nclass Service extends BaseService {\r\n  constructor() {\r\n    super(\"students\");\r\n  }\r\n}\r\n\r\nexport default Service;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function Form(props) {\r\n  const { open, onClose, onSave, id } = props;\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          {props.formContent && (\r\n            <DialogContentText>{props.formContent}</DialogContentText>\r\n          )}\r\n          {props.children}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => onSave(id)} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TxtField from \"@material-ui/core/TextField\";\r\n\r\nconst TextField = (props) => {\r\n  const {\r\n    autoFocus,\r\n    margin,\r\n    label,\r\n    type,\r\n    fullWidth,\r\n    value,\r\n    name,\r\n    onChange,\r\n    className,\r\n  } = props;\r\n\r\n  function handleChange(e) {\r\n    onChange(name, e.target.value);\r\n  }\r\n  return (\r\n    <TxtField\r\n      className={className}\r\n      autoFocus={autoFocus}\r\n      margin={margin}\r\n      label={label}\r\n      type={type}\r\n      fullWidth={fullWidth}\r\n      value={value}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextField;\r\n","import \"date-fns\";\r\nimport React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n// import MuiPickersUtilsProvider from \"material-ui-pickers/MuiPickersUtilsProvider\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\n// export default function MaterialUIPickers() {\r\n\r\nfunction DatePickers(props) {\r\n  // The first commit of Material-UI\r\n  // const [selectedDate, setSelectedDate] = React.useState(\r\n  //   new Date(\"2014-08-18T21:11:54\")\r\n  // );\r\n  const {\r\n    value,\r\n    onChange,\r\n    label,\r\n    id,\r\n    format,\r\n    name,\r\n    disableToolbar,\r\n    variant,\r\n  } = props;\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    new Date().toISOString().split(\"T\")[0]\r\n  );\r\n\r\n  const handleDateChange = (date) => {\r\n    // setSelectedDate(date);\r\n    onChange(name, new Date(date).toISOString().split(\"T\")[0]);\r\n  };\r\n  return (\r\n    // <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <KeyboardDatePicker\r\n        disableToolbar={disableToolbar}\r\n        variant={variant}\r\n        format={format}\r\n        margin=\"normal\"\r\n        id={id}\r\n        name={name}\r\n        label={label}\r\n        value={value}\r\n        onChange={handleDateChange}\r\n        KeyboardButtonProps={{\r\n          \"aria-label\": \"change date\",\r\n        }}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\nexport default DatePickers;\r\n","// StudentForm = Student->Form->index.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Form from \"../../../components/Form\";\r\nimport TextField from \"../../../components/TextField\";\r\nimport DatePicker from \"../../../components/DatePicker\";\r\nimport StudentService from \"../../../services/Student\";\r\nconst studentService = new StudentService();\r\nconst StudentForm = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [editRecord, setEditRecord] = useState({}); // must pass default vales otherwise code will break during destructuring the vales from editRecord\r\n  const { isFormOpen, onClose, id } = props;\r\n  // const { isFormOpen, id } = props;\r\n\r\n  const {\r\n    name,\r\n    dob,\r\n    gender,\r\n    currentClassId,\r\n    admissionNumber,\r\n    organizationId,\r\n    branchId,\r\n    transportMode,\r\n  } = editRecord;\r\n\r\n  const objStudent = {\r\n    name: \"\",\r\n    dob: new Date().toISOString().split(\"T\")[0], // default current date in specific format\r\n    gender: \"\",\r\n    currentClassId: \"\",\r\n    admissionNumber: \"GDG-15-2351\",\r\n    organizationId: \"\",\r\n    branchId: \"\",\r\n    transportMode: \"school\",\r\n  };\r\n  // console.log(\"form.index.js->outside return->state var->\", editRecord);\r\n\r\n  // const onEdit = async () => {\r\n  //   const recordResults = await getStudentRecordById(id);\r\n  //   console.log(\"onEdit.recordResults22222\", recordResults);\r\n  //   setEditRecord(recordResults);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const updateStudent = async () => {\r\n      setIsLoading(true);\r\n      const { results } = await studentService.findById(id); // console.log( \"form.Index->useEffect->studentService.findById.response-->\",results);\r\n      if (results) {\r\n        results[\"dob\"] = new Date(results[\"dob\"]).toISOString().split(\"T\")[0];\r\n        setEditRecord(results);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    updateStudent();\r\n    // console.log(\"index form useEffect called\", id);\r\n\r\n    // return () => {\r\n    //   console.log(\"component will unmount\");\r\n    //   // return results;\r\n    // };\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   return () => {\r\n  //     console.log(\"Component Will Unmount\");\r\n  //   };\r\n  // });\r\n  const onChangeField = (name, value) => {\r\n    // set the state vars in case of edit otherwise in student object\r\n    // console.log('form.index->onChangeField->id--',id)\r\n    if (id) {\r\n      // console.log('edit');\r\n      setEditRecord({ ...editRecord, [name]: value });\r\n    } else {\r\n      objStudent[name] = value;\r\n      // console.log('add... objstud',objStudent);\r\n    }\r\n  };\r\n\r\n  const getStudentRecordById = async (id) => {\r\n    setIsLoading(true);\r\n    const { results } = await studentService.findById(id);\r\n    // setEditRecord(results);\r\n    // console.log(\r\n    //   \"getStudentRecordById editRecord after setEditRecord\",\r\n    //   editRecord\r\n    // );\r\n    setIsLoading(false);\r\n    return results;\r\n  };\r\n  const onSave = async () => {\r\n    try {\r\n      if (id) {\r\n        console.log(\"update id=\", id);\r\n        const results = await studentService.updateRecord(editRecord, id);\r\n        if (results.success) {\r\n          console.log(\"Record updated at id = \", results.id);\r\n        }\r\n      } else {\r\n        // console.log(\"insert id=\", id);\r\n        // console.log(\"insert - objStudent --\", objStudent);\r\n        const results = await studentService.insertRecord(objStudent);\r\n        if (results.success) {\r\n          console.log(\"Record inserted at id = \", results.id);\r\n        }\r\n      }\r\n      onClose(true);\r\n    } catch (error) {\r\n      console.log(\"error occurred in student->form->index.js\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onClose={onClose}\r\n      onSave={onSave}\r\n      open={isFormOpen}\r\n      title={\"Student Master\"}\r\n      formContent={\"for managing student details\"}\r\n    >\r\n      <TextField\r\n        autoFocus\r\n        margin=\"dense\"\r\n        label=\"Name\"\r\n        type=\"datepicker\"\r\n        fullWidth\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={onChangeField}\r\n      />\r\n      <DatePicker\r\n        disableToolbar={false}\r\n        variant=\"\" // pass inline for inline datepicker\r\n        id=\"dob\"\r\n        label=\"Date of Birth\"\r\n        name=\"dob\"\r\n        value={dob}\r\n        format=\"yyyy-MM-dd\"\r\n        onChange={onChangeField}\r\n      />\r\n      <TextField\r\n        autoFocus={true}\r\n        margin=\"dense\"\r\n        label=\"Gender\"\r\n        type=\"text\"\r\n        fullWidth\r\n        name=\"gender\"\r\n        value={gender}\r\n        onChange={onChangeField}\r\n      />\r\n      <TextField\r\n        autoFocus={true}\r\n        margin=\"dense\"\r\n        label=\"Current Class\"\r\n        type=\"text\"\r\n        fullWidth\r\n        name=\"currentClassId\"\r\n        value={currentClassId}\r\n        onChange={onChangeField}\r\n      />\r\n      <TextField\r\n        autoFocus={true}\r\n        margin=\"dense\"\r\n        label=\"Admission Number\"\r\n        type=\"text\"\r\n        fullWidth\r\n        name=\"admissionNumber\"\r\n        value={admissionNumber}\r\n        onChange={onChangeField}\r\n      />\r\n      <TextField\r\n        autoFocus={true}\r\n        margin=\"dense\"\r\n        label=\"Organization\"\r\n        type=\"text\"\r\n        fullWidth\r\n        name=\"organizationId\"\r\n        value={organizationId}\r\n        onChange={onChangeField}\r\n      />\r\n      <TextField\r\n        autoFocus={true}\r\n        margin=\"dense\"\r\n        label=\"Branch\"\r\n        type=\"text\"\r\n        fullWidth\r\n        name=\"branchId\"\r\n        value={branchId}\r\n        onChange={onChangeField}\r\n      />\r\n      <TextField\r\n        autoFocus={true}\r\n        margin=\"dense\"\r\n        label=\"Transport Mode\"\r\n        type=\"text\"\r\n        fullWidth\r\n        name=\"transportMode\"\r\n        value={transportMode}\r\n        onChange={onChangeField}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default StudentForm;\r\n","import React from \"react\";\r\nimport Edit from \"@material-ui/icons/Create\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\n\r\nconst Actions = (props) => {\r\n  const { record, onEdit, deleteRecordId, onDelete } = props;\r\n  const onEditHandler = () => {\r\n    // console.log(record);\r\n    onEdit(record);\r\n  };\r\n  const onDeleteHandler = () => {\r\n    // console.log(deleteRecordId);\r\n    onDelete(deleteRecordId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Edit onClick={onEditHandler} />\r\n      <Delete onClick={onDeleteHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n  //   const { onClose, value: valueProp, open, ...other} = props;\r\n  //...other except the mentioned props rest will be available in other\r\n  const { open, handleCancel, handleOk, content, title, ...other } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"xs\"\r\n      //   onEntering={handleEntering}\r\n      aria-labelledby=\"confirmation-dialog-title\"\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">\r\n        {/* Delete Confirmation */}\r\n        {title}\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        {typeof content == \"string\"\r\n          ? content\r\n          : React.Children.map(content, (item) => item)}\r\n        {/* content.map((item) => item) */}\r\n        {/* {React.Children.map(content, (item) => item)} */}\r\n        {/* {content} */}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n  handleCancel: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  paper: {\r\n    width: \"80%\",\r\n    maxHeight: 435,\r\n  },\r\n}));\r\n\r\nexport default ConfirmationDialogRaw;\r\n","import React, { useState, Fragment } from \"react\";\r\n// import {useState} from React;\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Actions from \"./Actions\";\r\nimport ConfirmationDialog from \"./Dialog\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\",\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n    padding: 15,\r\n  },\r\n});\r\n\r\nfunction SimpleTable(props) {\r\n  const {\r\n    classes,\r\n    columns,\r\n    isLoading,\r\n    data,\r\n    onEditClickHandler,\r\n    onDeleteClickHandler,\r\n    confirmationDialogContent,\r\n    confirmationDialogTitle,\r\n  } = props;\r\n  // use state returns 2 things 1. the value 2nd the setter func which will take true/false in our case.\r\n  const [isConfirmationDialogOpen, setIsConfirmationDialogOpen] = useState(\r\n    false\r\n  );\r\n  const [currentRecord, setCurrentRecord] = useState(null);\r\n  let [finalConfirmationMessage, setFinalConfirmationMessage] = useState([]);\r\n  const onCancelConfirmationDialog = () => {\r\n    console.log(\"onCancelConfirmationDialog is called\");\r\n    //on cancel reset everything\r\n    setIsConfirmationDialogOpen(false);\r\n    setCurrentRecord(null);\r\n  };\r\n\r\n  const onOkConfirmationDialog = () => {\r\n    console.log(\"onOkConfirmationDialog is called...\");\r\n    setIsConfirmationDialogOpen(false);\r\n    onDeleteClickHandler(currentRecord);\r\n  };\r\n  // let finalConfirmationMessage = \"vinay\";\r\n  const handleDelete = (id) => {\r\n    setFinalConfirmationMessage(\r\n      // use fragment to wrap muti items\r\n      // <Fragment>\r\n      //   {confirmationDialogContent}\r\n      //   <br />\r\n      //   {id}\r\n      // </Fragment>\r\n      //2 ways of doing this. either send values as array and while showing final content on diaolog component then render via map or use fragment to wrap muti items\r\n      [confirmationDialogContent, <br />, id]\r\n    );\r\n    setIsConfirmationDialogOpen(true);\r\n    setCurrentRecord(id);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((col) => {\r\n              return (\r\n                <TableCell key={col.name}>{col.name.toUpperCase()}</TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {isLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            data.map((row) => {\r\n              return (\r\n                <TableRow key={row.id}>\r\n                  {columns.map(({ name, render }) => {\r\n                    return (\r\n                      <TableCell key={name + row.id}>\r\n                        {render\r\n                          ? render(row)\r\n                          : row[name] === \"dob\"\r\n                          ? new Date(row[name]).toISOString().split(\"T\")[0]\r\n                          : row[name]}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n\r\n                  <TableCell>\r\n                    <Actions\r\n                      record={row}\r\n                      onEdit={onEditClickHandler}\r\n                      onDelete={handleDelete}\r\n                      deleteRecordId={row.id}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n      <ConfirmationDialog\r\n        open={isConfirmationDialogOpen}\r\n        // open={true}\r\n        handleCancel={onCancelConfirmationDialog}\r\n        handleOk={onOkConfirmationDialog}\r\n        content={finalConfirmationMessage}\r\n        title={confirmationDialogTitle}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nSimpleTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleTable);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getItem } from \"../utils/localStorage\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst withAuthentication = (Component) => {\r\n  // useEffect(() => {\r\n  // }, []);\r\n  // for traversing to a page 2 option either use history object or redirect the url.\r\n  // HOC by definition takes a component as an parameter and returns a new / fresh component\r\n  // thus we have to use a call back function instead of simply returning the component definition provided in param.\r\n  // because that will not be treated as a fresh function.\r\n\r\n  return (props) => {\r\n    const history = useHistory();\r\n    const user = getItem(\"user\");\r\n\r\n    if (!user) {\r\n      history.push(\"/Login\");\r\n    }\r\n    return <Component {...props} />; // if we reurn with angular tags then only it will be a component otherwise the definition of the component\r\n  };\r\n};\r\n\r\nexport default withAuthentication;\r\n","import localStorage from \"local-storage\";\r\n\r\nexport const getItem = (key) => {\r\n  return localStorage.get(key);\r\n};\r\n\r\nexport const setItem = (key, value) => {\r\n  return localStorage.set(key, value);\r\n};\r\n\r\nexport const removeItem = (key) => {\r\n  return localStorage.remove(key);\r\n};\r\n\r\nexport const clearLocalStorage = (key) => {\r\n  localStorage.clear();\r\n};\r\n\r\n// export { getItem, setItem, removeItem, clearLocalStorage };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport StudentService from \"../../services/Student\";\r\nimport WrapperForm from \"./Form/index\";\r\nimport Table from \"../../components/Table\";\r\nimport withAuthentication from \"../../components/withAuthentication\";\r\n\r\nconst studentService = new StudentService();\r\n\r\nconst TABLE_COLUMNS = [\r\n  { name: \"id\" },\r\n  { name: \"name\", render: ({ name }) => <i>{name}</i> },\r\n  { name: \"dob\" },\r\n  { name: \"gender\" },\r\n  { name: \"currentClassId\" },\r\n  { name: \"admissionNumber\" },\r\n  { name: \"organizationId\" },\r\n  { name: \"branchId\" },\r\n  {\r\n    name: \"transportMode\",\r\n    render: ({ transportMode }) => <b>{transportMode}</b>,\r\n  },\r\n];\r\nconst Student = () => {\r\n  // useState is a function thus use accordingly.\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const [editRecordId, setEditRecordId] = useState(0);\r\n\r\n  const [editRecord, setEditRecord] = useState({});\r\n  // console.log(\r\n  //   \"checking the value of edit record just below the state vars---\",\r\n  //   editRecord\r\n  // );\r\n\r\n  // takes 2 params retuns not to be captured as of now-   useEffect(callback, array);\r\n  useEffect(() => {\r\n    listStudent();\r\n    // let searchText = { key: \"subName\", value: this.state.searchText };\r\n    // console.log(\"COMPONENT DID MOUNT IN STUDENT\\n\\n\\n\");\r\n  }, []);\r\n  const listStudent = async () => {\r\n    setIsLoading(true);\r\n    const { results } = await studentService.find();\r\n    setList(results);\r\n    setIsLoading(false);\r\n  };\r\n  const onClose = (refetchList = false) => {\r\n    setIsFormOpen(false);\r\n    // if (refetchList) {\r\n    //   //call the find api again to refetch the list.\r\n    //   console.log(\"refetch the list?\");\r\n    // }\r\n  };\r\n\r\n  const onEdit = (record) => {\r\n    setIsFormOpen(true);\r\n    setEditRecordId(record.id);\r\n  };\r\n  const onDelete = async (id) => {\r\n    console.log(\"deleting record id =>\", id);\r\n    if (id) {\r\n      const result = await studentService.deleteRecord(id);\r\n      if (result.success) {\r\n        console.log(\"Record deleted \", result);\r\n        listStudent();\r\n      } else {\r\n        console.log(\"Delete operation failed details = \", result);\r\n      }\r\n    }\r\n  };\r\n  const onAddStudent = () => {\r\n    // console.log(\"add clicked\");\r\n    setEditMode(false);\r\n    setIsFormOpen(true);\r\n  };\r\n  // const onSave = (id) => {\r\n\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        id=\"btnAddStudent\"\r\n        style={{ float: \"right\" }}\r\n        onClick={onAddStudent}\r\n      >\r\n        Add Student\r\n      </button>\r\n      <Table\r\n        columns={TABLE_COLUMNS}\r\n        isLoading={isLoading}\r\n        data={list}\r\n        onEditClickHandler={onEdit}\r\n        onDeleteClickHandler={onDelete}\r\n        confirmationDialogTitle={\"Confirm delete student\"}\r\n        confirmationDialogContent={\"Are you sure to delete the student record?\"}\r\n      />\r\n\r\n      {isFormOpen && (\r\n        <WrapperForm\r\n          isFormOpen={isFormOpen}\r\n          onClose={onClose}\r\n          // onSave={onSave}\r\n          // onChangeField={onChangeField}\r\n          //data={record}\r\n          id={editRecordId}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuthentication(Student);\r\n","import React, { Children } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            My Student - Mini variant drawer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[\r\n            { label: \"Home\", path: \"/\" },\r\n            { label: \"Assignments\", path: \"/Assignments\" },\r\n            { label: \"Students\", path: \"/Students\" },\r\n          ].map(({ label, path }, index) => (\r\n            <ListItem\r\n              button\r\n              key={label}\r\n              onClick={() => {\r\n                history.push(path);\r\n                // console.log(path);\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n              </ListItemIcon>\r\n              <ListItemText primary={label} />\r\n              {/* using link */}\r\n              {/* <Link to={path}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={label} />\r\n              </Link>\r\n               */}\r\n            </ListItem>\r\n          ))}\r\n          <ListItem\r\n            button\r\n            key={\"Logout\"}\r\n            onClick={() => {\r\n              history.push(\"/Login\");\r\n              localStorage.clear();\r\n            }}\r\n          >\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Logout\"} />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Table from \"../../components/Table\";\r\n// import { string } from 'prop-types';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AssignmentService from \"../../services/Assignment\";\r\nimport AssignmentForm from \"../../components/Form\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\nimport TextField from \"../../components/TextField\";\r\nimport DatePicker from \"../../components/DatePicker\";\r\n// wrapping with withAuthentication\r\nimport withAuthentication from \"../../components/withAuthentication\";\r\n\r\nconst assignmentService = new AssignmentService();\r\n\r\nconst TABLE_COLUMNS = [\r\n  { name: \"id\" },\r\n  { name: \"subName\" },\r\n  { name: \"assignmentGivenByTeacher\" },\r\n  { name: \"section\" },\r\n  { name: \"assignmentDetails\" },\r\n  { name: \"dueDate\" },\r\n  { name: \"action\" },\r\n];\r\n\r\nconst styles = (theme) => {\r\n  console.log(\"logging theme value\", theme);\r\n  return {\r\n    button: {\r\n      background: theme.palette.primary.light,\r\n      color: theme.palette.primary.main,\r\n      float: \"right\",\r\n    },\r\n  };\r\n};\r\n\r\nclass Assignments extends Component {\r\n  objAssignment = {\r\n    subName: \"\",\r\n    assignmentGivenByTeacher: 0,\r\n    section: 0,\r\n    assignmentDetails: \"\",\r\n    dueDate: new Date().toISOString().split(\"T\")[0], //'2020-04-01',\r\n    // id: 0,\r\n  };\r\n\r\n  state = {\r\n    searchText: \"\",\r\n    list: [],\r\n    isLoading: true,\r\n    filteredList: [],\r\n    isFormOpen: false,\r\n    myAssignment: this.objAssignment,\r\n    editMode: false,\r\n    editRecordId: 0,\r\n  };\r\n  // render is also a method of class, similarly all respective event handler methods part of class thus defined outside render func\r\n  onClickCreateAssignment = () => {\r\n    // console.log(\"Create Button clicked\");\r\n    this.setState({ isFormOpen: true, editMode: false });\r\n  };\r\n\r\n  getAssignmentRecordById = (id) => {\r\n    const assignmentList = this.state.list;\r\n    const { myAssignment } = this.state;\r\n    // console.log(assignmentList);\r\n    const assignmentRecordById = assignmentList.filter((record) => {\r\n      if (record.id == id) {\r\n        return record;\r\n      }\r\n    });\r\n    // console.log(\"edited record\", assignmentRecordById);\r\n    this.setState({ myAssignment: assignmentRecordById[0] });\r\n    // this.setState({ myAssignment: assignmentRecordById[0] }, () => {\r\n    //   console.log(\"updated state on edit\", this.state.myAssignment);\r\n    // });\r\n  };\r\n  onEditClickHandler = (record) => {\r\n    console.log(record);\r\n    this.setState(\r\n      { isFormOpen: true, editMode: true, editRecordId: record.id },\r\n      () =>\r\n        console.log(\"onEditClickHandler logging state details----\", this.state)\r\n    );\r\n    this.getAssignmentRecordById(record.id);\r\n  };\r\n  onDeleteClickHandler = async (id) => {\r\n    console.log(\"deleting record id =>\", id);\r\n    if (id) {\r\n      const result = await assignmentService.deleteRecord(id);\r\n      if (result.success) {\r\n        console.log(\"Record deleted at id = \", result);\r\n        this.getAssignmentList();\r\n      } else {\r\n        console.log(\"Delete operation failed details = \", result);\r\n      }\r\n    }\r\n  };\r\n  onCloseAssignmentForm = () => {\r\n    console.log(\"Close Button clicked\");\r\n    //resetting to default values on cancel click\r\n    this.setState({\r\n      isFormOpen: false,\r\n      editMode: false,\r\n      editRecordId: 0,\r\n      myAssignment: this.objAssignment,\r\n    });\r\n  };\r\n\r\n  onSubmitAssignmentDetails = async (id = 0) => {\r\n    const { myAssignment } = this.state;\r\n    // console.log(\"SubmitAssignmentDetails clicked----\", myAssignment);\r\n    try {\r\n      if (id) {\r\n        console.log(\"update method called with id =\", id);\r\n        const result = await assignmentService.updateRecord(myAssignment, id);\r\n        if (result.success) {\r\n          console.log(\"Record updated at id = \", result.id);\r\n        }\r\n      } else {\r\n        console.log(\"insert method called with id =\", id);\r\n        const result = await assignmentService.insertRecord(myAssignment);\r\n        if (result.success) {\r\n          console.log(\"Record inserted at id = \", result.id);\r\n        }\r\n      }\r\n      // reset state to default for editMode and editRecordId\r\n      this.setState({\r\n        isFormOpen: false,\r\n        editMode: false,\r\n        editRecordId: 0,\r\n        myAssignment: this.objAssignment,\r\n      });\r\n    } catch (error) {\r\n      alert(\"save failed...\");\r\n    }\r\n  };\r\n  onChangeField = (name, value) => {\r\n    let myAssignment = this.state.myAssignment;\r\n    myAssignment[name] = value;\r\n    this.setState({ myAssignment }, () => {\r\n      console.log(\r\n        \"updated state from onChangeField=>\",\r\n        this.state.myAssignment\r\n      );\r\n    });\r\n  };\r\n  getAssignmentList = async () => {\r\n    let searchText = { key: \"subName\", value: this.state.searchText };\r\n    const { results } = await assignmentService.find({ searchText });\r\n    this.setState({ list: results, isLoading: false, filteredList: results });\r\n  };\r\n  render() {\r\n    const {\r\n      searchText,\r\n      isLoading,\r\n      filteredList,\r\n      isFormOpen,\r\n      myAssignment,\r\n    } = this.state;\r\n    const {\r\n      subName,\r\n      assignmentGivenByTeacher,\r\n      section,\r\n      assignmentDetails,\r\n      dueDate,\r\n    } = myAssignment;\r\n    const { classes } = this.props;\r\n    // console.log(\"state details-------\", this.state);\r\n    return (\r\n      <div style={{ padding: 15, width: \"90%\" }}>\r\n        <input\r\n          type=\"text\"\r\n          value={searchText}\r\n          onChange={(e) => this.setState({ searchText: e.target.value })}\r\n        />\r\n        <Button\r\n          className={classes.button}\r\n          onClick={this.onClickCreateAssignment}\r\n        >\r\n          Create Assignment\r\n        </Button>\r\n        <Table\r\n          columns={TABLE_COLUMNS}\r\n          data={filteredList}\r\n          isLoading={isLoading}\r\n          onEditClickHandler={this.onEditClickHandler}\r\n          onDeleteClickHandler={this.onDeleteClickHandler}\r\n          confirmationDialogContent={\"Are you confirm to delete?\"}\r\n          confirmationDialogTitle={\"Delete assignment confirmation\"}\r\n        />\r\n        <AssignmentForm\r\n          open={isFormOpen}\r\n          onClose={this.onCloseAssignmentForm}\r\n          onSave={this.onSubmitAssignmentDetails}\r\n          id={this.state.editRecordId}\r\n          title=\"Add Assignment\"\r\n          formContent=\"This is my first form\"\r\n        >\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Sub Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={subName}\r\n            name=\"subName\"\r\n            onChange={this.onChangeField}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Given By Teacher\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={assignmentGivenByTeacher}\r\n            name=\"assignmentGivenByTeacher\"\r\n            onChange={this.onChangeField}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Section\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={section}\r\n            name=\"section\"\r\n            onChange={this.onChangeField}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Details\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={assignmentDetails}\r\n            name=\"assignmentDetails\"\r\n            onChange={this.onChangeField}\r\n          />\r\n          {/* <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Due Date\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={dueDate}\r\n            name=\"dueDate\"\r\n            onChange={this.onChangeField}\r\n          /> */}\r\n          <DatePicker\r\n            disableToolbar={false}\r\n            variant=\"\" // pass inline for inline datepicker\r\n            id=\"date\"\r\n            label=\"Due Date\"\r\n            name=\"dueDate\"\r\n            format=\"yyyy-MM-dd\"\r\n            // type=\"date\"\r\n            value={dueDate}\r\n            onChange={this.onChangeField}\r\n            // className={classes.textField}\r\n            // InputLabelProps={{\r\n            //   shrink: true,\r\n            // }}\r\n          />\r\n        </AssignmentForm>\r\n      </div>\r\n    );\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      let searchText = { key: \"subName\", value: \"\" };\r\n      const { results } = await assignmentService.find({ searchText });\r\n      this.setState({ list: results, isLoading: false, filteredList: results });\r\n    } catch (error) {\r\n      console.log(\r\n        \"Assignment.js_didMount_errorMessage------\",\r\n        error.response.body\r\n      );\r\n      throw error;\r\n    }\r\n  }\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchText !== this.state.searchText) {\r\n      this.getAssignmentList();\r\n    }\r\n  }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (prevState.searchText !== this.state.searchText) {\r\n  //     this.setState({\r\n  //       filteredList: this.state.list.filter((li) => {\r\n  //         return li.subName.toLowerCase().startsWith(this.state.searchText.toLowerCase());\r\n  //       })\r\n  //     });\r\n  //   }\r\n  // };\r\n}\r\nexport default withAuthentication(withStyles(styles)(Assignments));\r\n","import BaseService from \"./BaseService\";\r\n\r\nclass Service extends BaseService {\r\n  constructor() {\r\n    super(\"assignments\");\r\n  }\r\n}\r\n\r\nexport default Service;\r\n","import { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    loginWrapper: {\r\n      background: \"white\",\r\n      minWidth: 200,\r\n      width: \"300px\",\r\n      margin: \"30% auto\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      padding: \"10px\",\r\n    },\r\n    title: {\r\n      color: \"#333\",\r\n      margin: \"5px 0\",\r\n    },\r\n    loginMainWrapper: {},\r\n    textField: {\r\n      display: \"block\",\r\n      marginBottom: 10,\r\n    },\r\n    loginButton: {\r\n      display: \"block\",\r\n      backgroundColor: \"#7583d0\",\r\n      width: \"40%\",\r\n      margin: \"10px 0\",\r\n    },\r\n    errorChip: {\r\n      color: \"red\",\r\n      borderRadius: 0,\r\n      width: \"100%\",\r\n      border: \"none\",\r\n    },\r\n  };\r\n});\r\nexport default useStyles;\r\n","import { setItem } from \"./localStorage\";\r\n\r\nconst mockUsers = [\r\n  {\r\n    name: \"Vinay sharma\",\r\n    age: \"41\",\r\n    userName: \"vinay\",\r\n    password: \"v123\",\r\n    token: \"vinaysharma41\",\r\n  },\r\n  {\r\n    name: \"Swarn Tiyagi\",\r\n    age: \"22\",\r\n    userName: \"swarn\",\r\n    password: \"s123\",\r\n    token: \"swarntyagi22\",\r\n  },\r\n];\r\n\r\nexport const authenticateUser = (un, pass) => {\r\n  return new Promise((resolve, reject) => {\r\n    const user = mockUsers.filter((item) => {\r\n      return item.userName === un && item.password === pass;\r\n    });\r\n    if (user.length) {\r\n      setItem(\"user\", JSON.stringify(user[0]));\r\n      resolve({ success: true });\r\n    } else {\r\n      reject({ success: false, error: \"Invalid User Name/ Password\" });\r\n    }\r\n  });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TextField from \"../TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useStyles from \"./Styles\";\r\nimport { authenticateUser } from \"../../utils/mockData\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nconst Login = () => {\r\n  const classess = useStyles();\r\n  let [userDetails, setUserDetails] = useState({ userName: \"\", password: \"\" });\r\n  const history = useHistory();\r\n  let [loginError, setLoginError] = useState(\"\");\r\n\r\n  // 2nd param is to behave as componentDidMount\r\n  useEffect(() => {\r\n    const user = localStorage.getItem(\"user\");\r\n    if (user) {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n  const onSubmit = async () => {\r\n    console.log(\"login called\", userDetails);\r\n    try {\r\n      const authenticatedUser = await authenticateUser(\r\n        userDetails.userName,\r\n        userDetails.password\r\n      );\r\n      // console.log(\"Login.js->onSubmit->authenticatedUser\", authenticatedUser);\r\n      // console.log(\r\n      //   \"Login.js->onSubmit->localStorage.user\",\r\n      //   JSON.parse(localStorage.getItem(\"user\"))\r\n      // );\r\n      history.push(\"/\");\r\n    } catch ({ error }) {\r\n      setLoginError(error);\r\n      console.log(\"Login.js->onSubmit->error\", error);\r\n    }\r\n  };\r\n  const onChange = (key, value) => {\r\n    loginError && setLoginError(\"\");\r\n    setUserDetails({ ...userDetails, [key]: value });\r\n  };\r\n  //--4 App ->(login route) ----- level n\r\n  //-----3 Login component ----- level n-1\r\n  //-------2 TextField wrapper----------------level n-2\r\n  //---------1 TextField material ui----------------level n-3\r\n  // Leavel 1 called the upper level onChange for sending data back to upper level via e.target\r\n  // Level 2 called the upper level handleChange for sending data back to upper level via name, value after splitting e.target.\r\n  // Level 3 used the data back sent from lower level onChange for setting in the stateVariables (UserDetails) --- that will be finally used from local state vars\r\n\r\n  return (\r\n    <div className={classess.loginMainWrapper}>\r\n      <div className={classess.loginWrapper}>\r\n        <h1 className={classess.title}>Login page</h1>\r\n        <TextField\r\n          name={\"userName\"}\r\n          className={classess.textField}\r\n          label=\"User Name\"\r\n          onChange={onChange}\r\n          value={userDetails.userName}\r\n        />\r\n        <TextField\r\n          className={classess.textField}\r\n          label=\"Password\"\r\n          name={\"password\"}\r\n          onChange={onChange}\r\n          value={userDetails.password}\r\n        />\r\n        {loginError && (\r\n          <Chip\r\n            label={loginError}\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            className={classess.errorChip}\r\n          />\r\n        )}\r\n        <Button\r\n          className={classess.loginButton}\r\n          onClick={onSubmit}\r\n          color=\"primary\"\r\n        >\r\n          Login\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\n// import Table from './components/Table';\r\n// import logo from './logo.svg';\r\nimport \"./App.css\";\r\n// import { string } from 'prop-types';\r\n// import { Tab } from '@material-ui/core';\r\n// import Assignments from \"./containers/Assignments/Assignments\";\r\nimport Students from \"./containers/Students/Student\";\r\nimport Drawer from \"./components/Drawer\";\r\nimport Assignments from \"./containers/Assignments/Assignments\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport Login from \"./components/Login/Login\";\r\nimport withAuthentication from \"../src/components/withAuthentication\";\r\n\r\nconst Home = () => {};\r\nconst withDrawer = (location) => {\r\n  if (location.pathname === \"/Login\") {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst App = () => {\r\n  let location = useLocation();\r\n  console.log(location);\r\n  console.log(\"localStorage\", localStorage);\r\n  const isDrawer = withDrawer(location);\r\n  console.log(\r\n    \"App.js->Environment.REACT_APP_SERVICE_URL\",\r\n    process.env.REACT_APP_SERVICE_URL\r\n  );\r\n  return !isDrawer ? (\r\n    <Drawer>\r\n      <Switch>\r\n        {/* switch provides kind of typical switch case alternatives similar to regular ones. just providing options which path to called for a key/ component */}\r\n        <Route component={Assignments} path={\"/Assignments\"} />\r\n        <Route component={Students} path={\"/Students\"} />\r\n        {/* its a kind of inline rendering instead of giving component name we telling the route that we rendering a component by its definition/ inline definition */}\r\n        <Route\r\n          // render={withAuthentication(() => {\r\n          //   return <h1>\"Hello to my default route\"</h1>;\r\n          // })}\r\n          render={() => {\r\n            return <h1>\"Hello to my default route\"</h1>;\r\n          }}\r\n          path={\"/\"}\r\n        />\r\n        {/* <Route component={Login} path={\"/Login\"} /> */}\r\n      </Switch>\r\n    </Drawer>\r\n  ) : (\r\n    <Switch>\r\n      <Route component={Login} path={\"/Login\"} />\r\n    </Switch>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}